// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheMovieVerse.DB;

namespace TheMovieVerse.DB.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20220530190313_Models updated")]
    partial class Modelsupdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheMovieVerse.Model.Actor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MovieId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Hall", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HallName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<long?>("TheatreId")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalSeats")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TheatreId");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsUpcoming")
                        .HasColumnType("bit");

                    b.Property<string>("MovieDirector")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MovieGenre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MovieRating")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MovieTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("TheMovieVerse.Model.MovieBooking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HallId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SeatId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShowScheduleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TheatreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeatId");

                    b.HasIndex("ShowScheduleId");

                    b.HasIndex("TheatreId");

                    b.ToTable("MovieBooking");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Seat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("HallId")
                        .HasColumnType("bigint");

                    b.Property<string>("SeatNo")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<long?>("TheatreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("TheatreId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("TheMovieVerse.Model.ShowSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShowDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.Property<string>("TimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("ShowSchedule");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Theatre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TheatreName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Theatres");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Actor", b =>
                {
                    b.HasOne("TheMovieVerse.Model.Movie", null)
                        .WithMany("Actors")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Hall", b =>
                {
                    b.HasOne("TheMovieVerse.Model.Theatre", null)
                        .WithMany("Halls")
                        .HasForeignKey("TheatreId");
                });

            modelBuilder.Entity("TheMovieVerse.Model.MovieBooking", b =>
                {
                    b.HasOne("TheMovieVerse.Model.Hall", null)
                        .WithMany("MovieBookings")
                        .HasForeignKey("HallId");

                    b.HasOne("TheMovieVerse.Model.Movie", null)
                        .WithMany("MovieBookings")
                        .HasForeignKey("MovieId");

                    b.HasOne("TheMovieVerse.Model.Seat", null)
                        .WithMany("MovieBookings")
                        .HasForeignKey("SeatId");

                    b.HasOne("TheMovieVerse.Model.ShowSchedule", null)
                        .WithMany("MovieBookings")
                        .HasForeignKey("ShowScheduleId");

                    b.HasOne("TheMovieVerse.Model.Theatre", null)
                        .WithMany("MovieBookings")
                        .HasForeignKey("TheatreId");
                });

            modelBuilder.Entity("TheMovieVerse.Model.Seat", b =>
                {
                    b.HasOne("TheMovieVerse.Model.Hall", null)
                        .WithMany("Seats")
                        .HasForeignKey("HallId");

                    b.HasOne("TheMovieVerse.Model.Theatre", null)
                        .WithMany("Seats")
                        .HasForeignKey("TheatreId");
                });

            modelBuilder.Entity("TheMovieVerse.Model.ShowSchedule", b =>
                {
                    b.HasOne("TheMovieVerse.Model.Movie", null)
                        .WithMany("ShowSchedules")
                        .HasForeignKey("MovieId");
                });
#pragma warning restore 612, 618
        }
    }
}
